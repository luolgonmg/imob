{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import{toast}from\"react-toastify\";import{makeStyles}from\"@material-ui/core/styles\";import{green}from\"@material-ui/core/colors\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import ColorPicker from\"../ColorPicker\";import{FormControl,Grid,IconButton,InputAdornment,InputLabel,MenuItem,Paper,Select,Tab,Tabs}from\"@material-ui/core\";import{Colorize}from\"@material-ui/icons\";import{QueueOptions}from\"../QueueOptions\";import SchedulesForm from\"../SchedulesForm\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",flexWrap:\"wrap\"},textField:{marginRight:theme.spacing(1),flex:1},btnWrapper:{position:\"relative\"},buttonProgress:{color:green[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12},formControl:{margin:theme.spacing(1),minWidth:120},colorAdorment:{width:20,height:20}}));const QueueSchema=Yup.object().shape({name:Yup.string().min(2,\"Too Short!\").max(50,\"Too Long!\").required(\"Required\"),color:Yup.string().min(3,\"Too Short!\").max(9,\"Too Long!\").required(),greetingMessage:Yup.string()});const QueueModal=_ref=>{let{open,onClose,queueId}=_ref;const classes=useStyles();const initialState={name:\"\",color:\"\",greetingMessage:\"\",outOfHoursMessage:\"\",orderQueue:\"\",integrationId:\"\",promptId:\"\"};const[colorPickerModalOpen,setColorPickerModalOpen]=useState(false);const[queue,setQueue]=useState(initialState);const[tab,setTab]=useState(0);const[schedulesEnabled,setSchedulesEnabled]=useState(false);const greetingRef=useRef();const[integrations,setIntegrations]=useState([]);const[schedules,setSchedules]=useState([{weekday:\"Segunda-feira\",weekdayEn:\"monday\",startTime:\"08:00\",endTime:\"18:00\"},{weekday:\"Terça-feira\",weekdayEn:\"tuesday\",startTime:\"08:00\",endTime:\"18:00\"},{weekday:\"Quarta-feira\",weekdayEn:\"wednesday\",startTime:\"08:00\",endTime:\"18:00\"},{weekday:\"Quinta-feira\",weekdayEn:\"thursday\",startTime:\"08:00\",endTime:\"18:00\"},{weekday:\"Sexta-feira\",weekdayEn:\"friday\",startTime:\"08:00\",endTime:\"18:00\"},{weekday:\"Sábado\",weekdayEn:\"saturday\",startTime:\"08:00\",endTime:\"12:00\"},{weekday:\"Domingo\",weekdayEn:\"sunday\",startTime:\"00:00\",endTime:\"00:00\"}]);const[selectedPrompt,setSelectedPrompt]=useState(null);const[prompts,setPrompts]=useState([]);useEffect(()=>{(async()=>{try{const{data}=await api.get(\"/prompt\");setPrompts(data.prompts);}catch(err){toastError(err);}})();},[]);useEffect(()=>{api.get(\"/settings\").then(_ref2=>{let{data}=_ref2;if(Array.isArray(data)){const scheduleType=data.find(d=>d.key===\"scheduleType\");if(scheduleType){setSchedulesEnabled(scheduleType.value===\"queue\");}}});},[]);useEffect(()=>{(async()=>{try{const{data}=await api.get(\"/queueIntegration\");setIntegrations(data.queueIntegrations);}catch(err){toastError(err);}})();},[]);useEffect(()=>{(async()=>{if(!queueId)return;try{const{data}=await api.get(\"/queue/\".concat(queueId));setQueue(prevState=>{return{...prevState,...data};});data.promptId?setSelectedPrompt(data.promptId):setSelectedPrompt(null);setSchedules(data.schedules);}catch(err){toastError(err);}})();return()=>{setQueue({name:\"\",color:\"\",greetingMessage:\"\",outOfHoursMessage:\"\",orderQueue:\"\",integrationId:\"\"});};},[queueId,open]);const handleClose=()=>{onClose();setQueue(initialState);};const handleSaveQueue=async values=>{try{if(queueId){await api.put(\"/queue/\".concat(queueId),{...values,schedules,promptId:selectedPrompt?selectedPrompt:null});}else{await api.post(\"/queue\",{...values,schedules,promptId:selectedPrompt?selectedPrompt:null});}toast.success(\"Queue saved successfully\");handleClose();}catch(err){toastError(err);}};const handleSaveSchedules=async values=>{toast.success(\"Clique em salvar para registar as alterações\");setSchedules(values);setTab(0);};const handleChangePrompt=e=>{setSelectedPrompt(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Dialog,{maxWidth:\"md\",fullWidth:true,open:open,onClose:handleClose,scroll:\"paper\"},/*#__PURE__*/React.createElement(DialogTitle,null,queueId?\"\".concat(i18n.t(\"queueModal.title.edit\")):\"\".concat(i18n.t(\"queueModal.title.add\"))),/*#__PURE__*/React.createElement(Tabs,{value:tab,indicatorColor:\"primary\",textColor:\"primary\",onChange:(_,v)=>setTab(v),\"aria-label\":\"disabled tabs example\"},/*#__PURE__*/React.createElement(Tab,{label:\"Dados da Fila\"}),schedulesEnabled&&/*#__PURE__*/React.createElement(Tab,{label:\"Hor\\xE1rios de Atendimento\"})),tab===0&&/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(Formik,{initialValues:queue,enableReinitialize:true,validationSchema:QueueSchema,onSubmit:(values,actions)=>{setTimeout(()=>{handleSaveQueue(values);actions.setSubmitting(false);},400);}},_ref3=>{let{touched,errors,isSubmitting,values}=_ref3;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"queueModal.form.name\"),autoFocus:true,name:\"name\",error:touched.name&&Boolean(errors.name),helperText:touched.name&&errors.name,variant:\"outlined\",margin:\"dense\",className:classes.textField}),/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"queueModal.form.color\"),name:\"color\",id:\"color\",onFocus:()=>{setColorPickerModalOpen(true);greetingRef.current.focus();},error:touched.color&&Boolean(errors.color),helperText:touched.color&&errors.color,InputProps:{startAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"start\"},/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:values.color},className:classes.colorAdorment})),endAdornment:/*#__PURE__*/React.createElement(IconButton,{size:\"small\",color:\"default\",onClick:()=>setColorPickerModalOpen(true)},/*#__PURE__*/React.createElement(Colorize,null))},variant:\"outlined\",margin:\"dense\",className:classes.textField}),/*#__PURE__*/React.createElement(ColorPicker,{open:colorPickerModalOpen,handleClose:()=>setColorPickerModalOpen(false),onChange:color=>{values.color=color;setQueue(()=>{return{...values,color};});}}),/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"queueModal.form.orderQueue\"),name:\"orderQueue\",type:\"orderQueue\",error:touched.orderQueue&&Boolean(errors.orderQueue),helperText:touched.orderQueue&&errors.orderQueue,variant:\"outlined\",margin:\"dense\",className:classes.textField1}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",margin:\"dense\",className:classes.FormControl,fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,{id:\"integrationId-selection-label\"},i18n.t(\"queueModal.form.integrationId\")),/*#__PURE__*/React.createElement(Field,{as:Select,label:i18n.t(\"queueModal.form.integrationId\"),name:\"integrationId\",id:\"integrationId\",placeholder:i18n.t(\"queueModal.form.integrationId\"),labelId:\"integrationId-selection-label\",value:values.integrationId||\"\"},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},\"Nenhum\"),integrations.map(integration=>/*#__PURE__*/React.createElement(MenuItem,{key:integration.id,value:integration.id},integration.name)))),/*#__PURE__*/React.createElement(FormControl,{margin:\"dense\",variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,i18n.t(\"whatsappModal.form.prompt\")),/*#__PURE__*/React.createElement(Select,{labelId:\"dialog-select-prompt-label\",id:\"dialog-select-prompt\",name:\"promptId\",value:selectedPrompt||\"\",onChange:handleChangePrompt,label:i18n.t(\"whatsappModal.form.prompt\"),fullWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null}},prompts.map(prompt=>/*#__PURE__*/React.createElement(MenuItem,{key:prompt.id,value:prompt.id},prompt.name))))),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:5}},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"queueModal.form.greetingMessage\"),type:\"greetingMessage\",multiline:true,inputRef:greetingRef,rows:5,fullWidth:true,name:\"greetingMessage\",error:touched.greetingMessage&&Boolean(errors.greetingMessage),helperText:touched.greetingMessage&&errors.greetingMessage,variant:\"outlined\",margin:\"dense\"}),schedulesEnabled&&/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"queueModal.form.outOfHoursMessage\"),type:\"outOfHoursMessage\",multiline:true,inputRef:greetingRef,rows:5,fullWidth:true,name:\"outOfHoursMessage\",error:touched.outOfHoursMessage&&Boolean(errors.outOfHoursMessage),helperText:touched.outOfHoursMessage&&errors.outOfHoursMessage,variant:\"outlined\",margin:\"dense\"})),/*#__PURE__*/React.createElement(QueueOptions,{queueId:queueId})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",disabled:isSubmitting,variant:\"outlined\"},i18n.t(\"queueModal.buttons.cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",disabled:isSubmitting,variant:\"contained\",className:classes.btnWrapper},queueId?\"\".concat(i18n.t(\"queueModal.buttons.okEdit\")):\"\".concat(i18n.t(\"queueModal.buttons.okAdd\")),isSubmitting&&/*#__PURE__*/React.createElement(CircularProgress,{size:24,className:classes.buttonProgress}))));})),tab===1&&/*#__PURE__*/React.createElement(Paper,{style:{padding:20}},/*#__PURE__*/React.createElement(SchedulesForm,{loading:false,onSubmit:handleSaveSchedules,initialValues:schedules,labelSaveButton:\"Adicionar\"}))));};export default QueueModal;","map":null,"metadata":{},"sourceType":"module"}